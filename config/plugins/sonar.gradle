buildscript {
    //noinspection GroovyAssignabilityCheck
    repositories repositorioLocal
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarVersion}"
    }
}


dependencies{
    testCompile "org.spockframework:spock-core:${spockVersion}"
}

System.setProperty("sonar.host.url", "http://192.168.15.102:9000")
System.setProperty("sonar.tests", "src/test/groovy")
System.setProperty("sonar.junit.reportsPath", "${project.buildDir}/test-results/test/")

System.setProperty("sonar.java.binaries","${project.buildDir}/classes/java/main")
System.setProperty("sonar.java.test.binaries", "${project.buildDir}/classes/java/test")

System.setProperty("sonar.groovy.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec")

System.setProperty("sonar.groovy.binaries","${project.buildDir}/classes/groovy/main")
System.setProperty("sonar.groovy.test.binaries", "${project.buildDir}/classes/groovy/test")


apply plugin:  Class.forName("org.sonarqube.gradle.SonarQubePlugin")
apply plugin: 'groovy'
apply plugin: 'jacoco'


sourceSets {
    main {
        java{
            exclude 'src/main/groovy'
        }
    }
    test{
        java{
            srcDir 'src/test/groovy'
            exclude 'src/test/java'
        }
    }
}


jacocoTestReport {
    group = "reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}


test.finalizedBy jacocoTestReport


test{
    jacoco{
        destinationFile = file("build/jacoco/jacoco-ut.exec")
    }
}
