/* Dados do projeto*/
group = "com.brunorozendo"
version = "1.0"

/**
 *  Obrigatório: Configuração para o próprio gradle
 */
buildscript {
    repositories repositorioLocal
}

/**
 *  Obrigatório: Precisa informar onde buscar as dependencias
 */
repositories repositorioLocal



apply plugin: 'war'
apply from: 'config/versionNumbers.gradle'
apply from: 'config/plugins/checkstyle.gradle'
apply from: 'config/plugins/sonar.gradle'
//apply from: 'config/plugins/jetty.gradle'
//apply from: 'config/plugins/tomcat.gradle'
apply from: 'config/plugins/flyway.gradle'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

/**
 *  Obrigatório: Simples configuração para garantir o encode
 */
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

/**
 * Criar um pasta que pode ser usada como se fosse a pasta "resources",
 * mas somente para as views(html's)
 *
 */

sourceSets {
    main {
        resources {
            srcDir 'src/main/view'
        }
    }
}



dependencies {

    /**
     *  Obrigatório
     *  Servlet : está um a aplicação web, logo é um requisito,
     */
    compileOnly "javax.servlet:javax.servlet-api:${servletVersion}"

    /**
     *  Obrigatório: está aplicação está contruido em cima do spring
     *  obs: o exlude 'commons-logging' é para poder usar o slf4j
     */
    compile("org.springframework:spring-webmvc:${springVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    /**
     *  Obrigatório
     *  Thymeleaf: reponsável pelo preocessamento da view
     */
    compile "org.thymeleaf:thymeleaf:${thymeleafVersion}"
    compile "org.thymeleaf:thymeleaf-spring5:${thymeleafVersion}"

    /**
     *  Obrigatório: logger
     *  obs: os projetos dos spring por default usam o apache-commons-logging
     *  JCL-OVER-SLF4J: usa a api do apache-commons-logging mas por
     *   			   baixo dos panos chama a implementaçdo do slf4j
     */
    compile "ch.qos.logback:logback-classic:${logback}"
    compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"

    /**
     *  Opcional
     *  Hibernate validator: implementação do bean validation
     */
    compile "org.hibernate.validator:hibernate-validator:${hibernatewValidatorVersion}"

    /**
     *  Opcional
     *  JPA: implmentação do jpa
     */
    compile "org.eclipse.persistence:org.eclipse.persistence.jpa:${eclipseLinkVersion}"

    /**
     *  Obrigatório: está aplicação está contruido em cima do spring-jpa
     *  Spring-jpa: criar a maoria dos metodos de um crud Ex= findAll, findById...
     */
    compile "org.springframework.data:spring-data-jpa:${springDataVersion}"

    /**
     * Obrigatório para o spring
     * Jackson-Databind : parse do json para um objeto
     */
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"


    //Database jdbc
    compile "org.postgresql:postgresql:${postgresqlVersion}"
    compile "com.mchange:c3p0:${c3p0Version}"
    compile "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:${log4j2Jdbc4Version}"


    compile "com.google.guava:guava:${guavaVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"



}

wrapper {
    gradleVersion = "4.10.2"
}

